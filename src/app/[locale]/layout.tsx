import type { Metadata } from "next";
import { JetBrains_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/Header";
import PageTransition from "@/components/PageTransition";
import StairTransition from "@/components/StairTransition";
import { SparklesCore } from "@/components/ui/Sparkles";
import { NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";

const JetbrainsMono = JetBrains_Mono({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800"],
  variable: "--font-jetbrainsMono",
});

export const metadata: Metadata = {
  title: "Boulaabi Ahmed Portfolio",
  description: "Generated by create next app",
};

async function loadMessages(locale: string) {
  try {
    const messages = (await import(`../../../messages/${locale}.json`)).default;
    return messages;
  } catch (error) {
    console.error(`Failed to load messages for locale: ${locale}`, error);
    return null; // Return null to indicate failure
  }
}

interface RootLayoutProps {
  children: React.ReactNode;
  params: { locale: string };
}

export default async function RootLayout({
  children,
  params,
}: Readonly<RootLayoutProps>) {
  const locale = params.locale || "en"; // Fallback to 'en' if locale is undefined
  console.log("Locale 1:", locale); // Debugging: Log the locale

  const messages = await loadMessages(locale);

  if (!messages) {
    notFound();
  }

  return (
    <html lang={locale}>
      <body className={JetbrainsMono.variable}>
        <div className="w-full fixed inset-0 h-full z-0">
          <SparklesCore
            id="tsparticlesfullpage"
            background="transparent"
            minSize={0.6}
            maxSize={1.4}
            particleDensity={100}
            className="w-full h-full"
            particleColor="#FFFFFF"
          />
        </div>
        <div className="relative z-10">
          <NextIntlClientProvider locale={locale} messages={messages}>
            <Header />
            <StairTransition />
            <PageTransition>{children}</PageTransition>
          </NextIntlClientProvider>
        </div>
      </body>
    </html>
  );
}
